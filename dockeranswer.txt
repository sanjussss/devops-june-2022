1.Docker file size is 2GB and need to reduce the size ? what will you do ?

Use a Smaller Image Base (Alpine)
Use a .dockerignore File.
Utilize the Multi-Stage Builds Feature in Docker.
Avoid Adding Unnecessary Layers to Reduce Docker Image Size.
Beware of Updates and Unnecessary Packages and Dependencies.
Bonus Tip: Caching.


2.At the time of docker build –t cmd execution if you press CTRL+C, what happens ?

If the Docker client loses connection to the daemon, the build is canceled. 
This happens if you interrupt the Docker client with CTRL-c or if the Docker client is killed for any reason

3.Diff bw layers and image ?

Each layer is an image itself, just one without a human-assigned tag. 
They have auto-generated IDs though. Each layer stores the changes compared to the image it's based on. 
An image can consist of a single layer

4.If you give multiple entrypoints in Docker file, which will be executed and what happened to previous ones ?
If we use multiple CMD or ENTRYPOINT in the same Dockerfile only the latest one will be considered 
		  and all the other CMD or ENTRYPOINT will be ignored.	

5.By default in which user the container starts to execute cmds ?

The default user in docker exec is the same user used to start the container which can be set in docker run or your compose file. If you do not explicitly set the user when starting the container, it will default to the user configured in the image, you can inspect the image to look this up

6.Docker socket?

Docker socket file is located at /var/run/docker.sock. It is used to communicate with the main docker daemon (process) by default.
It is the entry point for a Docker API. This socket is used by Docker CLI by default to execute docker command
7.what is container Runtime in Docker ?

The container runtime is the low-level component that creates and runs containers. 
Docker currently uses runC, the most popular runtime, which adheres to the OCI standard that defines container image formats and execution

8.How do you mount a file system in docker container ?

Choose the -v or --mount flag
In the case of bind mounts, the first field is the path to the file or directory on the host machine.
The second field is the path where the file or directory is mounted in the container.

9.Write a Dockerfile and push to dockerhub.
refrer sir notes

10.docker file structure?
refer sir notes

multistage dockerfile script ?
refer sir notes

dockerfile to install java ?

FROM mybaseimage:0.1
MAINTAINER ...

ENV JAVA_HOME /usr/lib/jvm/java-7-openjdk-amd64
RUN sed 's/main$/main universe/' -i /etc/apt/sources.list

ENV DEBIAN_FRONTEND noninteractive

RUN apt-get update

RUN apt-get install -y openjdk-7-jre && apt-get clean &&\
             mkdir temp_dir  &&   cd temp_dir && \
             ${JAVA_HOME}/bin/jar -xvf somejar.jar  &&\
             cd ..
ENTRYPOINT ["somescript.sh"]

From command ?
FROM is the first instruction in the every Dockerfile
FROM is used to specify the base image on top which all the other instruction will run in the same Dockerfile.

Publish & Expose

- publics will bind the container port to the host port which we can access from 
	  outside world using <host_ip>:<port_mapped>
	
	- To publish a port 
		docker run -p <host_port>:<container_port> .....

EXPOSE <port_number>
		- Used to expose a port to the docker network 
		- This is make the  port accessible by all the other containers in the 
		  same docker network.	

* docker container
Docker definition: A container is a standard unit of software that packages 
	up code and all its dependencies so the application runs quickly and reliably 
	from one computing environment to another

 diff b/w cmd & entrypoint
 Both CMD and ENTRYPOINT are used to define the execution command of the container which will be created 
		  from this image.
		- If we use multiple CMD or ENTRYPOINT in the same Dockerfile only the latest one will be considered 
		  and all the other CMD or ENTRYPOINT will be ignored.	
		- If we use both CMD and ENTRYPOINT in the same Dockerfile, ENTRYPOINT will get the 
		  higest priority and the command of CMD will become as argumetns to ENTRYPOINT

difference between cmd and run

RUN is an image build step, the state of the container after a RUN command will be committed to the container image.
A Dockerfile can have many RUN steps that layer on top of one another to build the image. 
CMD is the command the container executes by default when you launch the built image.

If previous night the container had stopped working and terminated, how will you collect logs when you even dont have volume attach to it

Find the stopped container via docker ps - a.
grab the container id of the failed container.
Substitute it in this command cat /var/lib/docker/containers/<container id>/<container id>-json.log.

How do you secure your Docker image?

Best practices to secure Docker containers
Regularly update Docker and host. Make sure that Docker and the host are up-to-date. ...
Run containers as a non-root user. ...
Configure resource quotas. ...
Set container resource limits. ...
Keep images clean. ...
Secure container registries. ...
Monitor API and network security.

Do you use docker swam
no 

How u create docker image from Dockerfile?
s

Difference between docker image and container?
The key difference between a Docker image vs a container is that 
a Docker image is a template that defines how a container will be realized. 
A Docker container is a runtime instance of a Docker image.

Namespace cgroup

Docker uses namespaces of various kinds to provide the isolation that 
containers need in order to remain portable and refrain from affecting the remainder of the host system.

I have created a custom container , how can I deliver it to the other users?

thrrouh dockerhub

Where u store docker images in project?
dockerhub

 What is DTR, docker trust registry

Docker Trusted Registry (DTR) is the enterprise-grade image storage solution from Docker. 
You install it behind your firewall so that you can securely store and manage the Docker images you use in your applications.
Docker trusted registry or simply Docker registry is an enterprise offering from Docker.

write the docker file with all the commands and explain

refer sir notes

docker file versioning
Docker containers work just like GIT repositories, 
allowing you to commit changes to your Docker images and version control them.

docker cmd for trouble container

How do I troubleshoot a Docker container?
Troubleshooting Docker
Check the logs: The logs are the first place to look. ...
Restart Docker Desktop: Restarting the Docker Desktop often resolves an issue. ...
Clean mapped volume data: If your containers use mapped volumes for persistent storage, 
your issue can be come from stale data in these folders

 docker swam 

A Docker Swarm is a group of either physical or virtual machines that are running the Docker application and
that have been configured to join together in a cluster

 docker compose
Compose is a tool for defining and running multi-container Docker applications.
 With Compose, you use a YAML file to configure your application’s services. 
Then, with a single command, you create and start all the services from your configuration.

how you maintain docker and k8s in your production

From the Docker Dashboard, select the Setting icon, or Preferences icon if you use a macOS.
Select Kubernetes from the left sidebar.
Next to Enable Kubernetes, select the checkbox.
Select Apply & Restart to save the settings and then click Install to confirm

difference between docker and k8s
Docker is a suite of software development tools for creating, sharing and running individual containers;
Kubernetes is a system for operating containerized applications at scale

 Docker layers ;top layer is read & write

When you start a container, Docker takes all the layers on your image, 
and adds a new one on top of it – That's the read-write layer, 
and the one containing all the changes you do to your filesystem: File changes, file additions, file deletions

Have you used any kind of docker concept

When you use Docker, you are creating and using images, containers, networks, volumes, plugins, and other objects.

where you fiting this docker concept.. which network you will be used ?
Bridge networking

common kind of issues you have faced when you creating a docker image?




created container using cmd docker -p & my container crashed how you are going to troubleshoot

Find out if the Docker daemon is running. Since I am running on Ubuntu, I built this VM to use Upstart as the boot time start mechanism. ...
Start your container, see if it's running. ...
Check the container log. ...
Commit the container changes to a new image.

To copy files/docker image  from one machine to another machine. one machine is build vm another is plain vm bcoz my container is running out of memeory. is it possible? whats the command

To copy files/docker image  from one machine to another machine. one machine is build vm another is plain vm bcoz my container is running out of memeory. is it possible? whats the command
what you need to do is first export the image to a file, then copy that file over from your current server to the new one using scp or rsync and finally load the image to your new server


Why cant we use AWS AMI instead of Docker Image

aws ami suuport vm
docker suport contarization tool

docker networks

refer sir notes

command to attach docker volume to container
docker run -v volume_name:container_path

whats the use of docker ps

it list all the running containers

difference between k8s & dockerswam
Docker Swarm is a lightweight, easy-to-use orchestration tool with limited offerings compared to Kubernetes.
In contrast, Kubernetes is complex but powerful and provides self-healing, 
auto-scaling capabilities out of the box

what are the services in docker swam

A service is the definition of the tasks to execute on the manager or worker nodes. 
It is the central structure of the swarm system and the primary root of user interaction with the swarm. 

with dockers what kind of application you used java based/ python based

A Dockerfile is a fundamental building block used when dockerizing your Java applications,

What docker port mapping

Port mapping is used to access the services running inside a Docker container

What's -p
 
publish the container

State full and stateless containers

What is stateful and stateless containers?
Stateless applications tend to include containerized microservices apps, CDN, print services, or
 any short term workers. and are easy for both deploying and managing resources. 

Stateful applications typically involve some database, such as Cassandra, MongoDB, 
or MySQL and processes a read and/or write to it.

Difference between them

The key difference between stateful and stateless applications is that stateless applications don't “store” data 
whereas stateful applications require backing storage. Stateful applications like the Cassandra,
 MongoDB and mySQL databases all require some type of persistent storage that will survive service restarts.

In dockerfile run the application which command u use - entrypoint, CMd

-entrypoint


 What is containerization
refer sir notes

How you give root permission inside docker file

Create the docker group. $ sudo groupadd docker.
Add your user to the docker group. $ sudo usermod -aG docker $USER.
Log out and log back in so that your group membership is re-evaluated. ...
Verify that you can run docker commands without sudo .

How will you make your application in docker access externally

use the --publish or -p flag.

How to find background process in docker containers
docker ps -a



Can any application run in a container?
You can run any application in Docker as long as it can be installed and executed unattended










